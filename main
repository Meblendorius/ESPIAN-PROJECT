import smtplib
from email.mime.multipart import  MIMEMultipart
from email.mime.text import MIMEText

import time

import email
from email.header import decode_header
import imaplib

def envio():
    host='smtp.gmail.com'
    port= 587
    user= 'espian.python@gmail.com'
    password= 'Espian@python'

    print('Criando acesso')
    server= smtplib.SMTP(host,port)

    print('Login...')
    server.ehlo()
    server.starttls()
    server.login(user,password)

    #mensagem
    message= 'Teste'
    print('Criando Mensagem...')
    email_msg= MIMEMultipart()
    email_msg['From']= user
    email_msg['To']= 'espian.python.rec@gmail.com'
    email_msg['Subject']= 'Testou5 '
    email_msg['Message-id']= email.utils.make_msgid()


    id= email_msg['Message-id']

    print('adicionando texto')
    email_msg.attach(MIMEText(message,'plain'))

    #enviando mensagem

    print('Enviando Mensagem...')
    server.sendmail(email_msg['From'],email_msg['To'],email_msg.as_string())
    print('Mensagem enviada!')
    print('=============================================================================')
    server.quit()
    return id

#=============================================================================

def recebimento():
    id=envio()
    EMAIL = 'espian.python.rec@gmail.com'
    PASSWORD = 'Espian@python'
    SERVER = 'imap.gmail.com'

    print('Acessando Imap')
    mail = imaplib.IMAP4_SSL(SERVER)
    mail.login(EMAIL, PASSWORD)
    mail.select('inbox')

    ii='aa'
    status, data = mail.search(None, '(HEADER Message-ID "%s")' %id)
    mail_ids = []
    for block in data:

        # a função split chamada sem nenhum parâmetro
        # transforma texto ou bytes em listas usando como
        # ponto de divisão o espaço em branco:
        # b'1 2 3'.split() => [b'1', b'2', b'3']
        mail_ids += block.split()

    # agora para cada id baixaremos o email
    # e extrairemos seu conteúdo
    while not mail_ids:

        for i in mail_ids:
            # a função fetch baixa o email passando id e o formato
            # em que você deseja que a mensagem venha
            status, data = mail.fetch(i, '(RFC822)')

            # data no formato '(RFC822)' vem em uma lista com a
            # tupla onde o conteúdo está e o byte de fechamento b')'
            # por isso vamos iterar pelo data extraindo a tupla
            for response_part in data:
                # se for a tupla a extraímos o conteúdo
                if isinstance(response_part, tuple):
                    # o primeiro elemento da tupla é o cabeçalho
                    # de formatação e o segundo elemento possuí o
                    # conteúdo que queremos extrair
                    message = email.message_from_bytes(response_part[1])

                    # com o resultado conseguimos pegar as
                    # informações de quem enviou o email e o assunto
                    mail_from = message['from']
                    mail_subject = message['subject']

                    # agora para o texto do email precisamos de um
                    # pouco mais de trabalho pois ele pode vir em texto puro
                    # ou em multipart, se for texto puro é só ir para o
                    # else e extraí-lo do payload, caso contrário temos que
                    # separar o que é anexo e extrair somente o texto
                    if message.is_multipart():
                        mail_content = ''

                        # no caso do multipart vem junto com o email
                        # anexos e outras versões do mesmo email em
                        # diferentes formatos como texto imagem e html
                        # para isso vamos andar pelo payload do email
                        for part in message.get_payload():
                            # se o conteúdo for texto text/plain que é o
                            # texto puro nós extraímos
                            if part.get_content_type() == 'text/plain':
                                mail_content += part.get_payload()
                    else:
                        mail_content = message.get_payload()

                    # por fim vamos mostrar na tela o resultado da extração
                    date = decode_header(message["Date"])[0][0]
                    id= decode_header(message["Message-ID"])[0][0]
                    print(date)
                    print(id)
                    print(f'From: {mail_from}')
                    print(f'Subject: {mail_subject}')
                    time.sleep(120)

recebimento()

